@model IEnumerable<CartIndex>
@using Newtonsoft.Json;
@{
    ViewBag.Title = "Index";

}
@using (Html.BeginForm("Index", "Carts", FormMethod.Post))
{
    <div class="container-xl mt-5">
        <div class="order-nav">
            <div class="title">
                <h2>
                    購物步驟
                </h2>
            </div>
            <div class="step row">
                <li class="col-6 col-sm-2 active"><a href="#">1.確認購物明細</a></li>
                <li class="col-6 col-sm-2"><a href="#">2.確認訂單明細</a></li>
                <li class="col-6 col-sm-2"><a href="#">3.進行付款</a></li>
                <li class="col-6 col-sm-2"><a href="#">4.完成訂購</a></li>
            </div>
        </div>

        @*
            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        *@

        <div class="order-content">
            <div class="content-nav">
                <li class="active"><a href="#">購物明細(@Model.Count())</a></li>
                @*<li><a href="#">追蹤清單({X})</a></li>*@
            </div>
            <div class="content">
                <table class="table">
                    <tr>
                        <th>
                            <span>商品名稱</span>
                        </th>
                    </tr>
                    @{
                        int i = 0;
                    }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="product">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="@i" name="ch"> @*id="flexCheckDefault"   因為非唯一ID而報錯，先註解*@
                                        <label class="form-check-label" for="flexCheckDefault">

                                        </label>
                                    </div>
                                    <div class="product-img">
                                        <a href="#">
                                            @*<img src="~/Assets/images/cart/A451.jpg" />*@
                                            <img src="@item.ImgSources" data-fancybox="gallery"/>
                                        </a>
                                    </div>
                                    <div class="product-name">
                                        <a href="#">
                                            @*{JavaScript 學習手冊}*@
                                            @Html.DisplayFor(m => item.ProductName)
                                        </a>
                                    </div>
                                </div>
                                <div class="product-stock">
                                        @{
                                            //日期選取器
                                            <button type="button" class="orange d-flex justify-content-evenly align-items-center" data-bs-toggle="modal" data-bs-target="#DateModal">
                                                設定租借期間
                                            </button>
                                            //軒：POST起迄日用
                                            <input type="hidden" name="ListProductID[@i]"
                                                   value="@item.ProductID" />
                                            <input type="hidden" name="ListStartDate[@i]"
                                                   value="" />
                                            <input type="hidden" name="ListExpirationDate[@i]"
                                                   value="" />
                                            <input type="hidden" name="ListModified[@i]"
                                                   value="false" />
                                            <input type="hidden" name="ListChecked[@i]"
                                                   value="false" />
                                            i++;
                                        }

                                    </div>
                                    <div class="product-price-qty my-3">
                                        <div class="unitprice">
                                            <span class="title">日租價格 :</span>
                                            <span class="price">
                                                @item.DailyRate.ToString("C0")
                                            </span>
                                        </div>
                                        <div class="buyqty">
                                            <span class="title">天數 : </span>
                                            <span class="dateDiff">
                                                @Html.DisplayFor(m => item.DateDiff)
                                            </span>

                                            @*<span class="title">租借數量 :</span>
                                                <input type="number" value="1" class="qty" readonly>*@
                                        </div>
                                    </div>
                                    <div class="product-delete-sub">
                                        <div class="delete">
                                            <a href="@Url.Action("Delete","Carts",new { Memberid = item.MemberID, Productid = item.ProductID })" class="btn" role="button">刪除</a>
                                        </div>
                                        <div class="product-sub">
                                            <span class="title">小計：</span>
                                            <span class="subTotal">
                                                @item.Sub.ToString("C0")
                                            </span>
                                        </div>
                                    </div>
                                </td>

                                @*<td>
                                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                                        @Html.ActionLink("Delete", "Delete", new { Memberid = item.MemberID, Productid = item.ProductID })
                                    </td>*@

                            </tr>
                        }
                    <input type="hidden" name="" value="false" />
                    <tr>
                        <td>
                            <div class="order-total">
                                <span>總計：</span>
                                <span class="total">
                                    @ViewBag.Total
                                </span>
                            </div>
                        </td>
                    </tr>
                </table>
                <div class="content-footer">
                    <div>
                        <p>超商取貨滿350元免運費，未滿350元酌收處理費40元，宅配郵寄未滿1000元需加收50元運費</p>
                    </div>
                    <div class="checkout">
                        <input type="hidden" class="check" name="name" value="" />
                        @*<a href="@Url.Action("Checkout","Carts")" class="btn" role="button" type="submit">進行結帳</a>*@
                        <button type="submit" class="btn btn_s" disabled="disabled">進行結帳</button>
                    </div>
                </div>
                <div class="notice">
                    <h2>注意事項</h2>
                    <div class="content-inner-block">
                        <h3>訂購缺書書籍的訂單</h3>
                        <p>當您的訂單中同時包含缺書中與有現貨之書籍時，將於書籍到齊後才一併出貨及寄出，若您不願等待缺書中之書籍，建議將有現貨與缺貨籍各別下訂單。</p>
                        <h3>缺貨書籍需等候時間</h3>
                        <p>缺貨之書籍，根據供貨來源不同，約可分為下列四種：</p>
                        <li>中文書：供應商有現貨，約 3~7個工作天左右可到貨</li>
                        <li>非天瓏代理進口之原文書：若代理商有現貨，約 5~8個工作天左右到貨</li>
                        <li>天瓏代理進口之原文書：若國外供應商有現貨，約 2週~4週左右到貨</li>
                        <li>代購書籍：若國外廠商可供貨，約 2週~4週左右到貨</li>
                        <p>以上到貨時間若因無法控制之因素而延遲到貨，我們將儘速通知您，您可自行決定是否保留訂單繼續等候或是取消訂單。</p>
                        <p>若書籍有無法供貨情形發生，我們會打電話通知您。</p>
                        <h3>選擇匯款或劃撥之訂單</h3>
                        <p>下單後請別先行匯款，請在收到我們的匯款通知信後，再去匯款即可，並通知我們您的匯款資訊，以加速訂單處理速度。</p>
                    </div>
                </div>
            </div>

            @Html.Partial("../Shared/Partial_DateTimeModal")
        </div>
    </div>
}
@section topCSS{
    <!-- Google Font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- dateTimePicker 第三方套件-->
    <link rel="stylesheet" href="~/Assets/css/Shared/flatpickr_orange.css" />
    <!-- dateTimePicker 自訂-->
    <link rel="stylesheet" href="~/Assets/css/Shared/dateTimePicker.css" />
    @* 再額外一個CSS *@

    <link rel="stylesheet" href="~/Assets/css/Cart/navbar.css" />
    <link rel="stylesheet" href="~/Assets/css/Cart/ordercontent.css" />
}

@section endJS{
    <!-- 第三方套件 -->
    <script src="~/Assets/js/Shared/flatpickr.js"></script>

    <!-- dateTimePicker預定義 -->
    <script src="~/Assets/js/Shared/dateTimePickerPreDef.js"></script>

    <script>
        //checkout返回index重整頁面
        var needRefresh = sessionStorage.getItem("need-refresh");
        if (needRefresh) {
            sessionStorage.removeItem("need-refresh");
            location.reload();
        }


        let DateModalLauncher = null;
        let StartDateToPost = null;
        let ExpirationDateToPost = null;
        let disablePeriodsJSONArray = [];

        let DateModalBtns = document.querySelectorAll('button[data-bs-target="#DateModal"]');
        let checkBoxes = document.querySelectorAll('.form-check-input');

        //如果在購物車且有選日期 => 預顯示文字、寫入POST欄位，開放勾選
        @{
            int i = 0;
            string dateTimeFormat = new ProductDetailToCart().DateTimeFormat;
            foreach ( var item in Model)
            {

                if ( item.StartDate.HasValue ) {
                    <text>
                    DateModalLauncher = DateModalBtns[@i];
                    startDateTimeText = '@(item.StartDate.Value.ToString(dateTimeFormat))';
                    endDateTimeText = '@item.ExpirationDate.Value.ToString(dateTimeFormat)';
                    StartDateToPost = document.querySelector(`input[name="ListStartDate[@i]"]`);
                    ExpirationDateToPost = document.querySelector(`input[name="ListExpirationDate[@i]"]`);

                    showPeriodText(startDateTimeText,endDateTimeText);
                    </text>
                }
                else
                {
                    <text>
                    //沒有日期就禁用CheckBox
                    checkBoxes[@i].disabled = true;
                    </text>
                }
                <text>
                disablePeriodsJSONArray.push( @Html.Raw(item.DisablePeriodsJSON));
                </text>
                i++;
            }
        }

        DateModalBtns.forEach((btn, i) => {
            btn.addEventListener('click', function (ev) {
                //指定DateModalLauncher
                DateModalLauncher = btn;
                //指定要寫入的POST欄位
                StartDateToPost = document.querySelector(`input[name="ListStartDate[${i}]"]`);
                ExpirationDateToPost = document.querySelector(`input[name="ListExpirationDate[${i}]"]`);
                //禁租日期
                datePicker.config.disable = disablePeriodsJSONArray[i];


                //以索引值取
                //目標單價、目標天數欄位、目標小計欄位、目標異動紀錄欄位 目標核取方塊
                dailyRate = function () {
                    return document.querySelectorAll(`span.price`)[i].innerText;//雖然不太妥，但是下一頁會重算
                };
                rentDaysTarget = function () {
                    return document.querySelectorAll(`span.dateDiff`)[i];
                };
                subTotalTarget = function () {
                    return document.querySelectorAll(`span.subTotal`)[i];
                };
                modifiedTarget = function () {
                    return document.querySelector(`input[name="ListModified[${i}]"]`);
                };
                checkBoxTarget = function () {
                    return checkBoxes[i];
                };

            });
        });
    </script>
    <!-- dateTimePicker設定完成引發事件 -->
    <script src="~/Assets/js/Shared/dateTimePickerSettedEvent.js"></script>

    <script src="~/Assets/js/Cart/AfterDatetimeSetted.js"></script>

    <script>
        //防呆
        let btn_s = document.querySelector('.btn_s');


        function CheckAll() {
            if ($('input[name="ch"]:checked').length == 0) {
                btn_s.disabled = true
            }
            else if ($('input[name="ch"]:checked').length != 0){
                btn_s.disabled = false;
            }
        }
        $('input[name="ch"]').change(function () {
            CheckAll();
        });

        window.onload = function () {
            btn_s.disabled = true;
        }
    </script>

}
@if (User.Identity.IsAuthenticated)
{
    var result = Helper.ConvertMemberIdToMemberProfile(Int32.Parse(User.Identity.Name));
    TempData["img"] = result.ProfilePhotoUrl;
    TempData["name"] = result.Fullname;
}
