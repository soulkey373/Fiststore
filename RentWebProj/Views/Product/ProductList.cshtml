@model FilterSearchViewModel
@{
    ViewBag.Title = "ProductCards";
}
@using System.Text.RegularExpressions;
@using System.Web.UI.WebControls

<div class=@ViewBag.Page>

    <div class="row pt-lg-3 px-2">

        <!-- Left filter區-->
        <div class="col-lg-2 px-2 mx-0 ">
            <div class="searchContainer">
                @using (Html.BeginForm("SearchProductCards", "Product", FormMethod.Get))
                {
                    <div class="filterGroup">
                        @Html.LabelFor(model => model.Keyword)
                        @Html.EditorFor(model => model.Keyword, new { htmlAttributes = new { @class = "btn", placeholder = "想找什麼呢？" } })
                    </div>

                    <div class="filterGroup dNoneOnPhone">
                        @Html.LabelFor(model => model.Category)
                        <br>
                        @{
                            List<SelectListItem> categoryList = new List<SelectListItem>()
                                        {
                                new SelectListItem {Text = "選擇商品種類", Value = "0"}
                            };
                            foreach (var ct in ViewBag.categoryOptions)
                            {

                                categoryList.Add(new SelectListItem { Text = @ct.CategoryName, Value = @ct.CategoryID });
                            }

                        }

                        @Html.DropDownListFor(m => m.Category, categoryList, new { @class = "my-2 w-100", @id = "category" })

                        @* 副類下拉 *@
                        @{
                            List<SelectListItem> subcategoryList = new List<SelectListItem>()
                                                                                        {
                                new SelectListItem {Text = "選擇子分類", Value = "0"}
                            };

                            if (ViewBag.CategorySelected != null) //送出後如果有選大類 list就要加入副類
                            {
                                foreach (var sub in ViewBag.SubcategoryOptions)
                                {

                                    subcategoryList.Add(new SelectListItem { Text = sub.SubCategoryName, Value = sub.SubCategoryID });
                                }

                            }

                        }
                        @Html.DropDownListFor(m => m.SubCategory, subcategoryList, new { @class = "w-100", @id = "subCategory" })

                    </div>

                    <div class="filterGroup dNoneOnPhone">
                        @Html.LabelFor(model => model.RateBudget)
                        <br>
                        @{
                            List<SelectListItem> priceList = new List<SelectListItem>()
                                                                                        {
                                new SelectListItem {Text = "日租費預算範圍", Value = "0"},
                                new SelectListItem {Text = "$100以下", Value = "1"},
                                new SelectListItem {Text = "$101~$500", Value = "2"},
                                new SelectListItem {Text = "$501~$1000", Value = "3"},
                                new SelectListItem {Text = "$1000↑ $不是問題", Value = "4"}
                            };
                        }
                        @Html.DropDownListFor(m => m.RateBudget, priceList, new { @class = "my-2 w-100" })

                    </div>

                    <div class="filterGroup dNoneOnPhone">

                        @Html.LabelFor(model => model.OrderBy)
                        <br>
                        <label class="mt-1 ms-1">
                            @Html.RadioButtonFor(m => m.OrderBy, "Relevance", new { @checked = "checked" }) 最相關
                        </label>
                        <br>
                        <label class="mt-1 ms-1">
                            @Html.RadioButtonFor(m => m.OrderBy, "Price") 甜甜價低到高
                        </label>
                        <br>
                        <label class="mt-1 ms-1">
                            @Html.RadioButtonFor(m => m.OrderBy, "Stars") 星星熱門度
                        </label>
                        <br>

                    </div>

                    <input type="submit" value="送出搜尋" class="filterResultBtn my-2 dNoneOnPhone">


                }

            </div>

        </div>

        <!-- Right 種類或商品卡片部分 -->
        <div class="col-lg-10 col-12 px-2  mb-4 mx-0 ">

            <div class="col-12 px-2 @ViewBag.Container">
                <h4>@ViewBag.ContainerTitle</h4>

                <div class=" d-flex flex-wrap">
                    @if (ViewBag.ContainerTitle == nameof(ContainerTitle.種類列表))
                    {
                        foreach (CardsViewModel ct in ViewBag.CategoryOptions)
                        {
                            <div class="col-12 col-md-6">
                                <div class="category-card">
                                    @Html.Partial("Partial_CategoryCard", ct)
                                </div>
                            </div>
                        }
                    }

                    else
                    {
                        foreach (CardsViewModel product in ViewBag.selectedProductList)
                        {
                            <div class="col-6 col-md-4">
                                @Html.Partial("Partial_ProductCard", product)
                            </div>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
</div>

@section topCSS
{
    <link href="~/Assets/css/GeneralProductCards/GeneralCategories.css" rel="stylesheet" />
    <link href="~/Assets/css/GeneralProductCards/SearchFilter.css" rel="stylesheet" />
    <link href="~/Assets/css/GeneralProductCards/ProductCards.css" rel="stylesheet" />
}

@section topJS
{
}

@section endJS
{
    <script src="~/Assets/js/GeneralProductCards/ProductCards.js"></script>
    <script src="~/Assets/js/GeneralProductCards/SearchFilter.js"></script>
    <script>
        isAuthenticated_Cards = @Json.Encode(User.Identity.IsAuthenticated);
    </script>
    
    <script src="~/Assets/js/GeneralProductCards/CardToCart.js"></script>
    <script src="~/Assets/js/GeneralProductCards/CategoriesSelector.js"></script>

}
@if (User.Identity.IsAuthenticated)
{
    var result = Helper.ConvertMemberIdToMemberProfile(Int32.Parse(User.Identity.Name));
    TempData["img"] = result.ProfilePhotoUrl;
    TempData["name"] = result.Fullname;
}
